stages:
  - deploy

deploy_studyshare_stack:
  stage: deploy
  image: docker:latest # Uses an image that has docker-compose pre-installed
  tags:
    - docker-compose # Make sure this tag matches the tag you assigned to your GitLab Runner

  script:
    - echo "Host VM Time $(date)" # For debugging
    - echo "Verifying Docker and Docker Compose versions..."
    - docker --version
    - docker-compose --version
    - echo "DOCKER_HOST is $DOCKER_HOST"
    - echo "Pulling latest versions of images specified with 'image:' key (e.g., mariadb, minio)..."
    - docker-compose pull

    - echo "Building services defined with 'build:' key (backend, frontend)..."
    # The --pull flag ensures that base images in your Dockerfiles are updated.
    - docker-compose build --pull 

    - echo "Bringing up the StudyShare stack in detached mode..."
    - docker-compose up -d

    - echo "Waiting a few seconds for services to initialize..."
    - sleep 10 # Adjust as needed, or implement proper health checks

    - echo "Current status of the StudyShare stack:"
    - docker-compose ps

    - echo "StudyShare stack deployment finished. Services should be accessible on their configured ports."
    - echo "Backend http://<your-vm-ip>:8080"
    - echo "MariaDB <your-vm-ip>:3306 (from other tools/services)"
    - echo "Minio API http://<your-vm-ip>:9000 | Minio Console http://<your-vm-ip>:9001"
    - echo "Frontend http://<your-vm-ip>:5173"
